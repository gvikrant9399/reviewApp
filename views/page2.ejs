<!DOCTYPE html>
<html>
<head>
  <title>Feedback</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/web3/1.2.7-rc.0/web3.min.js"></script>
</head>
<body class="container mt-4">
  <%- include('partials/navbar') %>

  <h3>ðŸ’¬ Add Feedback</h3>
  <input id="feedbackDoctor" placeholder="Doctor's name" />
  <input id="feedbackText" placeholder="Your feedback" />
  <button onclick="addFeedback()">Submit Feedback</button>

  <h3>ðŸ“– View Feedback</h3>
  <input id="viewFeedbackDoctor" placeholder="Doctor's name" />
  <button onclick="viewFeedback()">View Feedback</button>
  <ul id="feedbackList"></ul>

  <script>
    const feedbackAddress = "0xde96f5268424953395670591Dd898334FF19c019";
    const feedbackABI = [{
		"inputs": [
			{
				"internalType": "string",
				"name": "doctor",
				"type": "string"
			},
			{
				"internalType": "string",
				"name": "review",
				"type": "string"
			}
		],
		"name": "addFeedback",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "string",
				"name": "",
				"type": "string"
			},
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"name": "feedbacks",
		"outputs": [
			{
				"internalType": "address",
				"name": "patient",
				"type": "address"
			},
			{
				"internalType": "string",
				"name": "review",
				"type": "string"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "string",
				"name": "doctor",
				"type": "string"
			},
			{
				"internalType": "uint256",
				"name": "index",
				"type": "uint256"
			}
		],
		"name": "getFeedback",
		"outputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			},
			{
				"internalType": "string",
				"name": "",
				"type": "string"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "string",
				"name": "doctor",
				"type": "string"
			}
		],
		"name": "getFeedbackCount",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	}
    ]; 
    
    let account;
    let web3 = new Web3(window.ethereum);

    const addFeedback = async () => {
      const doctor = document.getElementById("feedbackDoctor").value;
      const review = document.getElementById("feedbackText").value;
      const contract = new web3.eth.Contract(feedbackABI, feedbackAddress);
      const accounts = await ethereum.request({ method: "eth_requestAccounts" });
      await contract.methods.addFeedback(doctor, review).send({ from: accounts[0] });
      alert("Feedback submitted!");
    };

    const viewFeedback = async () => {
      const doctor = document.getElementById("viewFeedbackDoctor").value.trim();
      const contract = new web3.eth.Contract(feedbackABI, feedbackAddress);
      const list = document.getElementById("feedbackList");
      list.innerHTML = "";
      const count = await contract.methods.getFeedbackCount(doctor).call();

      for (let i = 0; i < count; i++) {
        const feedback = await contract.methods.getFeedback(doctor, i).call();
        const item = document.createElement("li");
        item.innerText = `${feedback[0]} said: "${feedback[1]}"`;
        list.appendChild(item);
      }
    };
  </script>
</body>
</html>

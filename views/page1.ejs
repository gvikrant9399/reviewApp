<!DOCTYPE html>
<html>
<head>
  <title>Doctor Registry</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/web3/1.2.7-rc.0/web3.min.js"></script>
</head>
<body class="container mt-4">
  <%- include('partials/navbar') %>

  <h3>Register Doctor</h3>
  <input id="doctorName" placeholder="Enter doctor's name" />
  <button onclick="registerDoctor()">Register Doctor</button>

  <h3>View Registered Doctors</h3>
  <button onclick="getDoctors()">Show Doctors</button>
  <ul id="doctorList"></ul>

  <script>
    const doctorAddress = "0x995A029A1fDd184c53B257899cc9D42839883C20";
    const doctorABI = [{
    "inputs": [
        {
            "internalType": "string",
            "name": "doctorName",
            "type": "string"
        }
    ],
    "name": "registerDoctor",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
},
{
    "inputs": [
        {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
        }
    ],
    "name": "doctorList",
    "outputs": [
        {
            "internalType": "string",
            "name": "",
            "type": "string"
        }
    ],
    "stateMutability": "view",
    "type": "function"
},
{
    "inputs": [],
    "name": "getDoctors",
    "outputs": [
        {
            "internalType": "string[]",
            "name": "",
            "type": "string[]"
        }
    ],
    "stateMutability": "view",
    "type": "function"
}
];

    let web3 = new Web3(window.ethereum);

    const registerDoctor = async () => {
      const name = document.getElementById("doctorName").value;
      const contract = new web3.eth.Contract(doctorABI, doctorAddress);
      const accounts = await ethereum.request({ method: "eth_requestAccounts" });
      await contract.methods.registerDoctor(name).send({ from: accounts[0] });
      alert("Doctor Registered!");
    };

    const getDoctors = async () => {
      const contract = new web3.eth.Contract(doctorABI, doctorAddress);
      const doctors = await contract.methods.getDoctors().call();
      const list = document.getElementById("doctorList");
      list.innerHTML = "";
      doctors.forEach(d => {
        const item = document.createElement("li");
        item.innerText = d;
        list.appendChild(item);
      });
    };
  </script>
</body>
</html>
